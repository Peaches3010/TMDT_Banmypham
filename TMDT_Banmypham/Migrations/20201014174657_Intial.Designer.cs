// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using eShopSolutionData.EF;

namespace TMDT_Banmypham.Migrations
{
    [DbContext(typeof(eShopDBContext))]
    [Migration("20201014174657_Intial")]
    partial class Intial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("TMDT_Banmypham.Models.Appconfig", b =>
                {
                    b.Property<string>("Key")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Key");

                    b.ToTable("Appconfigs");
                });

            modelBuilder.Entity("TMDT_Banmypham.Models.Cart", b =>
                {
                    b.Property<int>("IDCart")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("IDProduct")
                        .HasColumnType("int");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("IDCart");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("TMDT_Banmypham.Models.CatalogProduct", b =>
                {
                    b.Property<int>("IDCatalog")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IDCatalog");

                    b.ToTable("Loại Sản Phẩm");
                });

            modelBuilder.Entity("TMDT_Banmypham.Models.Ingredient", b =>
                {
                    b.Property<int>("IDIngredient")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateWrite")
                        .HasColumnType("datetime2");

                    b.Property<string>("Discription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IDProduct")
                        .HasColumnType("int");

                    b.Property<int>("Name")
                        .HasColumnType("int");

                    b.Property<int>("Rated")
                        .HasColumnType("int");

                    b.HasKey("IDIngredient");

                    b.HasIndex("IDProduct");

                    b.ToTable("Thành Phần");
                });

            modelBuilder.Entity("TMDT_Banmypham.Models.Post", b =>
                {
                    b.Property<int>("IDPost")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Discription")
                        .HasColumnType("text");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar")
                        .HasMaxLength(200);

                    b.HasKey("IDPost");

                    b.ToTable("Bài Viết");
                });

            modelBuilder.Entity("TMDT_Banmypham.Models.Product", b =>
                {
                    b.Property<int>("IDProduct")
                        .HasColumnType("int");

                    b.Property<int?>("CatalogIDCatalog")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar")
                        .HasMaxLength(200);

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Stock")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.Property<int>("ViewCount")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(0);

                    b.HasKey("IDProduct");

                    b.HasIndex("CatalogIDCatalog");

                    b.ToTable("Sản Phẩm");
                });

            modelBuilder.Entity("TMDT_Banmypham.Models.ProductinCatalog", b =>
                {
                    b.Property<int>("IDCatalog")
                        .HasColumnType("int");

                    b.Property<int>("IDProduct")
                        .HasColumnType("int");

                    b.HasKey("IDCatalog", "IDProduct");

                    b.HasIndex("IDProduct");

                    b.ToTable(" Sản phẩm trong giỏ hàng");
                });

            modelBuilder.Entity("TMDT_Banmypham.Models.Ingredient", b =>
                {
                    b.HasOne("TMDT_Banmypham.Models.Product", "Product")
                        .WithMany("Ingredients")
                        .HasForeignKey("IDProduct")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TMDT_Banmypham.Models.Product", b =>
                {
                    b.HasOne("TMDT_Banmypham.Models.CatalogProduct", "Catalog")
                        .WithMany()
                        .HasForeignKey("CatalogIDCatalog");

                    b.HasOne("TMDT_Banmypham.Models.Cart", "Carts")
                        .WithMany("Products")
                        .HasForeignKey("IDProduct")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TMDT_Banmypham.Models.ProductinCatalog", b =>
                {
                    b.HasOne("TMDT_Banmypham.Models.CatalogProduct", "Catalog")
                        .WithMany("ProductinCatalogs")
                        .HasForeignKey("IDCatalog")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TMDT_Banmypham.Models.Product", "Product")
                        .WithMany("ProductinCatalogs")
                        .HasForeignKey("IDProduct")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
